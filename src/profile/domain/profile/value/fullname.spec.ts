import { Fullname } from './fullname';

describe('Fullname', () => {
  test('Корректная инициализация firstName и lastName', () => {
    const fullname = new Fullname('Иван', 'Иванов');
    expect(fullname.firstName).toBe('Иван');
    expect(fullname.lastName).toBe('Иванов');
  });

  test('Корректное строковое представление полного имени', () => {
    const fullname = new Fullname('Иван', 'Иванов');
    expect(fullname.toString()).toBe('Fullname: Иван Иванов');
  });

  test('Должен выбрасывать исключение при пустом имени', () => {
    expect(() => new Fullname('', 'Иванов')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });

  test('Должен выбрасывать исключение при пустой фамилии', () => {
    expect(() => new Fullname('Иван', '')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });

  test('Должен выбрасывать исключение при пустых имени и фамилии', () => {
    expect(() => new Fullname('', '')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });

  test('Должен выбрасывать исключение при односимвольном имени', () => {
    expect(() => new Fullname('И', 'Иванов')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });

  test('Должен выбрасывать исключение при односимвольной фамилии', () => {
    expect(() => new Fullname('Иван', 'И')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });

  test('Должен выбрасывать исключение при односимвольных имени и фамилии', () => {
    expect(() => new Fullname('И', 'И')).toThrow(
      'Имя и фамилия должны содержать не менее двух символов',
    );
  });
});
